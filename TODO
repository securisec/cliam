Todo:
  ☐ ability to provide custom query params or body for complicated calls
  ☐ trap interrupts and exit cleanly
  ☐ enumerate functions should return an array of valid permissions
  ☐ refactor goroutine runners as DRY

Bug:

AWS:
  ☐ for services that require a body, it may be responding with a 404 if permission is valid

GCP:
  ☐ enumerate with access token
  
Helpers:
  ☐ helper functions for testing arbitrary permissions
    
Cli:
  ☐ support providing profiles from aws credentials file
  ☐ if access key starts with ASIA, then token is required maybe?
  ☐ spinner with backwards count of remaining calls?
  ☐ region completer
  ☐ read specific aws profile

Resources:
  - https://www.any-api.com/amazonaws_com/ec2/docs/_Action_DescribeInstances/DescribeInstances
  - https://docs.aws.amazon.com/index.html
  - https://stackoverflow.com/questions/46818661/whats-the-best-way-to-handle-too-many-open-files
  - git clone https://github.com/aws/aws-sdk-js.git

Archive:
  ✔ refactor aws subcommands to use single. helper function to get all policies for an array of services @project(AWS)
  ✔ context with timeout for requests @project(Todo)
  ✔ function that can take array of services and check permissions @project(Todo)
  ✔ aws serverless permissions subcommand @project(AWS)
