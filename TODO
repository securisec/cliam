Todo:
  ☐ trap interrupts and exit cleanly
  ☐ enumerate functions should return an array of valid permissions
  ☐ refactor goroutine runners as DRY
  ☐ firebase with config
  ☐ unify azureKnownResourceMap and azureUnknownResourceMap into a single map and flag
  ☐ update readme with azure and firebase 
  ☐ replicate success and failure count for aws and gcp
  ☐ figure out a way to have tab complete for multiple known values
  ☐ when using tokens, validate the expiration of the token

Bug:

AWS:
  ☐ for services that require a body, it may be responding with a 404 if permission is valid

GCP:

Firebase:
  ☐ authencated scan

Azure:
  ☐ default auth (from currently logged in user)
  
Helpers:
  ☐ helper functions for testing arbitrary permissions
    
Cli:
  ☐ if access key starts with ASIA, then token is required maybe?
  ☐ spinner with backwards count of remaining calls?
  ☐ move more verbose logging to the -v flag in the cli

Resources:
  - https://docs.aws.amazon.com/index.html
  - git clone https://github.com/aws/aws-sdk-js.git
  - https://docs.oracle.com/en-us/iaas/api/#/

Archive:
  ✔ cert based auth @project(Azure)
  ✔ enumerate with access token @project(GCP)
  ✔ ability to provide custom query params or body for complicated calls @project(Todo)
  ✔ gcp region completer @project(Cli)
  ✔ aws region completer @project(Cli)
  ✔ refactor gcp resourcemanager to use token and use rest api instead @project(Todo)
  ✔ refactor various aws resource groups as DRY @project(Todo)
  ✔ read specific aws profile @project(Cli)
  ✔ refactor aws subcommands to use single. helper function to get all policies for an array of services @project(AWS)
  ✔ context with timeout for requests @project(Todo)
  ✔ function that can take array of services and check permissions @project(Todo)
  ✔ aws serverless permissions subcommand @project(AWS)
