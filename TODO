Todo:
  ☐ trap interrupts and exit cleanly
  ☐ enumerate functions should return an array of valid permissions
  ☐ refactor goroutine runners as DRY
  ☐ firebase with config
  ☐ figure out a way to have tab complete for multiple known values
  ☐ when using tokens, validate the expiration of the token (done: azure)
  ☐ ability to test a specific permission for any cloud provider. will help with automation
  ☐ session-json for aws is not the right format
  ☐ gcp set parent as project if one is not set. get project from json file
  ☐ aws all regions flag
  ☐ aws : helper : cognito : get unauth creds
  ☐ gcp : helper : iam : get service accounts and their roles
  ☐ optionally pass known values as a json file
  ☐ flag that will show all possible valid keys for known values
  ☐ 🐛 bug with debug message which says azure although it is aws
  ☐ 💚 🐛 build for arm mac doesnt work on zsh
  ☐ ✨ sas-token enumeration for azure
  ☐ 💡 local database?

Helpers:

Bug:

AWS:

GCP:
  ☐ curl builder for requests

Firebase:
  ☐ authencated scan
  ☐ curl builder for requests

Azure:
  
Helpers:
    
Cli:
  ☐ if access key starts with ASIA, then token is required maybe?
  ☐ spinner with backwards count of remaining calls?
  ☐ move more verbose logging to the -v flag in the cli

Resources:
  - https://docs.aws.amazon.com/index.html
  - git clone https://github.com/aws/aws-sdk-js.git
  - https://docs.oracle.com/en-us/iaas/api/#/

Archive:
  ✔ improve aws ASIA token credentials parsing @project(Todo)
  ✔ @bug env based session token is not working @project(Todo)
  ✔ for gcp service account, try to read project id from file @project(Todo)
  ✔ add cognito @project(Todo)
  ✔ enumerate ebs snapshots across various regions @project(Helpers)
  ✔ curl builder for requests @project(AWS)
  ✔ curl builder for requests @project(Azure)
  ✔ replicate success and failure count for aws and gcp @project(Todo)
  ✔ update readme with azure and firebase  @project(Todo)
  ✔ default auth (from currently logged in user) @project(Azure)
  ✔ group resources under their respective top level resource. ie. mariadb, postgres and mysql under db @project(Azure)
  ✔ cert based auth @project(Azure)
  ✔ enumerate with access token @project(GCP)
  ✔ ability to provide custom query params or body for complicated calls @project(Todo)
  ✔ gcp region completer @project(Cli)
  ✔ aws region completer @project(Cli)
  ✔ refactor gcp resourcemanager to use token and use rest api instead @project(Todo)
  ✔ refactor various aws resource groups as DRY @project(Todo)
  ✔ read specific aws profile @project(Cli)
  ✔ refactor aws subcommands to use single. helper function to get all policies for an array of services @project(AWS)
  ✔ context with timeout for requests @project(Todo)
  ✔ function that can take array of services and check permissions @project(Todo)
  ✔ aws serverless permissions subcommand @project(AWS)
